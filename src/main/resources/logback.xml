<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="E://static/" />
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/drp.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="OFF" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="OFF" />
    <logger name="org.hibernate.SQL" level="OFF" />
    <logger name="org.hibernate.engine.QueryParameters" level="OFF" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="OFF" />

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>

    <!--log4jdbc 日志配置-->
    <include resource="org/springframework/boot/logging/logback/console-appender.xml"/>
    <!--仅仅记录 SQL 语句，会将占位符替换为实际的参数  如果使用jdbc.sqltiming记录sql执行时间,
    将jdbc.sqlonly 设置为OFF, 否则sql将会输出两遍-->
    <logger name="jdbc.sqlonly" level="OFF">
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
    </logger>
    <!--除了 ResultSet 之外的所有JDBC调用信息，篇幅较长-->
<!--    <logger name="jdbc.audit" level="OFF">-->
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
<!--    </logger>-->
    <!--包含 ResultSet 的信息，输出篇幅较长-->
<!--    <logger name="jdbc.resultset" level="DEBUG">-->
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
<!--    </logger>-->

    <!--输出了 Connection 的 open、close 等信息-->
<!--    <logger name="jdbc.connection" level="OFF">-->
<!--        <appender-ref ref="CONSOLE" />-->
<!--        <appender-ref ref="FILE" />-->
<!--    </logger>-->
    <!--包含 SQL 语句实际的执行时间-->
    <logger name="jdbc.sqltiming" level="DEBUG">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
    </logger>


</configuration>
